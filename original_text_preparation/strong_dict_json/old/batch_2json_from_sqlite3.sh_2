#!/bin/bash

# Check if the correct number of arguments is provided
if [ "$#" -lt 2 ]; then
  echo "Usage: $0 <start_strong_number> <end_strong_number> [nt|ot]"
  exit 1
fi

# Validate that arguments are integers
if ! [[ "$1" =~ ^[0-9]+$ ]] || ! [[ "$2" =~ ^[0-9]+$ ]]; then
  echo "Error: Start and End Strong Numbers must be integers."
  exit 1
fi

# Assign and validate the range
START=$1
END=$2

if [ "$END" -le "$START" ]; then
  echo "Error: End number must be greater than start number."
  exit 1
fi

# Determine if the third argument is provided; default to 'ot'
MODE=${3:-ot}

# Validate the third argument
if [[ "$MODE" != "nt" && "$MODE" != "ot" ]]; then
  echo "Error: Invalid mode. Use 'nt' for New Testament or 'ot' for Old Testament."
  exit 1
fi

# Check if the helper script exists
HELPER_SCRIPT="./2json_from_sqlite3.sh"
if [ ! -f "$HELPER_SCRIPT" ]; then
  echo "Error: Required script '$HELPER_SCRIPT' not found."
  exit 1
fi

# Print verbose message about the query range and mode
echo "Querying for ($MODE) Strong Numbers from $START to $END"

# Initialize JSON array
output="["

# Loop through the range
for (( i=START; i<=END; i++ )); do
  # Print progress
  echo "Processing Strong Number $i..."

  # Get the JSON for the current Strong Number
  json=$("$HELPER_SCRIPT" "$i" "$MODE" 2>/dev/null)

  # Check if the output is valid
  if [ -n "$json" ] && [[ "$json" == *"{"* ]]; then
    # Append the JSON object to the array
    output+="$json,"
  else
    echo "Warning: No result for Strong Number $(printf "%05d" "$i")."
  fi
done

# Remove the trailing comma and close the JSON array
output=${output%,}
output+="]"

# Print the final JSON array
echo "$output" | jq .
